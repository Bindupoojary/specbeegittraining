<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
/**
 * @file
 * Contains binduu_exercise.module.
 */

 use Drupal\binduu_exercise\Event\UserLoginEvent; #included the event that is cteated that is user login event to use the constant variable here.

//binduu_exercise_form_alter():  used to alter form.
//$form: The form array being altered.
//$form_state: An object representing the current state of the form.
//$form_id: The unique ID of the form.

function binduu_exercise_form_alter(&$form, FormStateInterface $form_state, $form_id) {

     // $route = \Drupal::routeMatch()->getRouteName();
    // print_r($route);
    // exit;
    $data=\Drupal::service('custom_service')->getName();  // returns the name of a configuration form
     // print_r($data);
      //exit;


}


/**
 * Implements hook_theme().
 */
function binduu_exercise_theme($existing, $type, $theme, $path) {   //binduu_exercise_theme used to define new hook theme.

    return [
            'block_plugin_template' => [   //name of the template file.
                'variables' => [           //defined variables
                    'text' => "",
                    'hexcode' =>"",
                ],
            ],
        ];
    }
/**
 * Implements hook_user_login().
 */
function binduu_exercise_user_login($account) {
    // Instantiate our event.
    $event = new UserLoginEvent($account); # Initializing the object for the event.

    // Get the event_dispatcher service and dispatch the event.
    $event_dispatcher = \Drupal::service('event_dispatcher'); # service to dispatch the event.
    $event_dispatcher->dispatch($event, UserLoginEvent::EVENT_NAME);#dispatching the event and passing the argument of event object to this.
}

function binduu_exercise_page_attachments_alter(array &$attachments) {
    $attachments['#attached']['library'][] = 'binduu_exercise/css_lib';
}